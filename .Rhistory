source("~/projects/RVA_2/code/rva_master_script.R", echo=TRUE)
source("~/projects/RVA_2/code/rva_master_script.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores=12)
path_to_project_directory <- "~/projects/RVA/"
path_to_s22 <- "~/projects/spring_2022_study/"
stan_model_dir<- paste0(path_to_project_directory,"code/stan_models/")
model_out_dir <- paste0(path_to_project_directory,"output/results/stan_model_fits/")
#load custom functions
source(paste0(path_to_s22,"code/functions/fit_stan_model.R"))
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22,"code/functions/stan_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva_utilities.R"))
library(tidyverse)
library(cmdstanr)
library(bayesplot)
library(abind)
trials %>%
group_by(sub_index) %>%
summarize(correlation = cor(outcome, val_rat, use = "complete.obs"))
trials <- read.csv(paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_2024-04-23_14_16_47.570477.csv"))
subs <- read.csv(paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_2024-04-23_14_16_47.570477.csv"))
sub_hard_fail <- subs %>% filter(att_checks_passed < 2 |
answers_incorrect > 2 |
sd_valrat < .05 |
sd_probrat < .05 |
valrat_skipped_percent > .15 |
probrat_skipped_percent > .15 |
trials_completed < 84)
#count the number of soft QC cutoffs each subject meets
subs$softs <- 0
for(i in 1:nrow(subs)){
subs$softs[i] <- length(which(c(subs$att_checks_passed[i] == 2,subs$answers_incorrect[i] == 2,
subs$sd_valrat[i] < .10, subs$valrat_skipped_percent[i] > .10,
subs$sd_probrat[i] < .07, subs$probrat_skipped_percent[i] > .10)))
}
sub_soft_fail <- filter(subs,softs >= 2) #identify those who meet more than 2 soft cutoffs
subs_to_exclude <- unique(c(sub_hard_fail$id,sub_soft_fail$id)) #get subjects who failed either set of criteria
#clean data
trials <- trials %>% filter(!(id %in% subs_to_exclude))
subs <- subs %>% filter(!(id %in% subs_to_exclude))
length(subs_to_exclude)/(nrow(subs)+length(subs_to_exclude)) #get percent excluded
trials <- add_sub_indices(trials) #add subject indices to the df. These will match the indices used in Stan.
trials <- add_probe_number(trials,newcol="vrat_number",val_col="val_rat") #add valence rating number
trials <- add_probe_number(trials,newcol="prat_number",val_col="prob_rat") #add probability rating number
trials$prev_vrat_cent <- trials$prev_rate - mean(trials$prev_rate,na.rm=T)
trials %>%
group_by(sub_index) %>%
summarize(correlation = cor(outcome, val_rat, use = "complete.obs"))
trials %>%
group_by(sub_index) %>%
summarize(correlation = cor(out_a, val_rat, use = "complete.obs"))
out_val_cors <- trials %>%
group_by(sub_index) %>%
summarize(correlation = cor(out_a, val_rat, use = "complete.obs"))
hist(out_val_cors)
out_val_cors
hist(out_val_cors$correlation)
mean(out_val_cors$correlation)
median(trials$val_rat_rt,na.rm=T)
