csvs_to_analyze
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
trials_list <- lapply(all_data, function(l) l[[1]]) #get a list of the trial-level dfs only
trial_level_data <- do.call(rbind,trials_list) #stack trial dfs into one big df
sub_list <- lapply(all_data, function(l) l[[2]]) #get a list of the subject-level dfs only
sub_level_data <- do.call(rbind,sub_list) #stack them into one big data frame
#append the Yes/No answer from qualtrics to this data
sub_level_data <- qualtrics_append(sub_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
source("~/projects/RVA/code/functions/rva_utilities.R", echo=TRUE)
#append the Yes/No answer from qualtrics to this data
sub_level_data <- qualtrics_append(sub_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
trial_level_data <- qualtrics_append(trial_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
date_time <- Sys.time() %>% chartr(" ","_",.) %>% chartr(":","_",.) #grab the date and time, reformatting ':' and '-' to  '_' so you can label the files with it
write.csv(trial_level_data,paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#write subject-level data
write.csv(sub_level_data,paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","prob_rat_rt","val_rat","prob_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
date_time <- Sys.time() %>% chartr(" ","_",.) %>% chartr(":","_",.) #grab the date and time, reformatting ':' and '-' to  '_' so you can label the files with it
write.csv(trial_level_data,paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#write subject-level data
write.csv(sub_level_data,paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","prob_rat_rt","val_rat","prob_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","prob_rat_rt","val_rat","prob_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
sl_hists <- c("answers_incorrect","instruct_keypress",
"feed_check_passed","aff_check_passed","worth_check_passed","att_checks_passed",
"probrat_skipped_percent","sd_probrat","mean_probrat_rt",
"valrat_skipped_percent","sd_valrat","mean_valrat_rt",
"earnings","total_experiment_time") #subject-level variables to plot
plot_sub_level_vars(sub_level_data,sl_hists,path_to_project_directory) #create and save plot grids
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
?grep
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
#This is the master script for initial data analysis steps
#It identifies data to use, wrangles it into a usable form, creates additional variables based on this data, and creates plots of certain variables for quality-checking.
library(qualtRics)
library(tidyverse)
library(ddpcr)
library(tidyverse)
library(sigmoid)
##SET MANUALLY
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
path_to_s22fu <- "~/projects/s22_follow_up/"
path_to_rva <- "~/projects/RVA/"
ids_to_exclude <- c("6398dc9eee4c333e1712e777") #Ps whose data you don't want to analyze even if it looks good
##############
#clear out results from old analyses
system("mv /Users/dp/projects/RVA_2/analysis_data/*.csv /Users/dp/projects/RVA/analysis_data/old_analysis_data") #move any CSV files in this folder to old_analysis_data folder
system("rm -rf /Users/dp/projects/RVA_2/analysis_data/qc_plots/trial_level_vars/*") #clear the folder containing trial-level plots
system("rm -f /Users/dp/projects/RVA_2/analysis_data/qc_plots/sub_level_variables.pdf") #remove old subject level variable plot
#read in necessary functions
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22fu,"code/functions/s22fu_utilities.R"))
source(paste0(path_to_rva,"code/functions/rva_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_wrangle_psychopy_data.R"))
csvs_to_analyze <- get_csvs_to_analyze(path_to_project_directory,ids_to_exclude,first_time="2024-04-26") #get the usable CSVs to analyze
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
#This is the master script for initial data analysis steps
#It identifies data to use, wrangles it into a usable form, creates additional variables based on this data, and creates plots of certain variables for quality-checking.
library(qualtRics)
library(tidyverse)
library(ddpcr)
library(tidyverse)
library(sigmoid)
##SET MANUALLY
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
path_to_s22fu <- "~/projects/s22_follow_up/"
path_to_rva <- "~/projects/RVA/"
ids_to_exclude <- c("6398dc9eee4c333e1712e777") #Ps whose data you don't want to analyze even if it looks good
##############
#clear out results from old analyses
system("mv /Users/dp/projects/RVA_2/analysis_data/*.csv /Users/dp/projects/RVA/analysis_data/old_analysis_data") #move any CSV files in this folder to old_analysis_data folder
system("rm -rf /Users/dp/projects/RVA_2/analysis_data/qc_plots/trial_level_vars/*") #clear the folder containing trial-level plots
system("rm -f /Users/dp/projects/RVA_2/analysis_data/qc_plots/sub_level_variables.pdf") #remove old subject level variable plot
#read in necessary functions
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22fu,"code/functions/s22fu_utilities.R"))
source(paste0(path_to_rva,"code/functions/rva_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_wrangle_psychopy_data.R"))
csvs_to_analyze <- get_csvs_to_analyze(path_to_project_directory,ids_to_exclude,first_time="2024-04-26") #get the usable CSVs to analyze
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
grep("[^0-9]",trials$frac,value=T)
grep("[^0-9]",trials$frac,value=F)
grep("\d",trials$frac,value=T)
grep("\\d",trials$frac,value=T)
grep("[0-9]",trials$frac,value=T)
grep("\\d+",trials$frac,value=T)
grep("res",trials$frac,value=T)
trials$frac
t
trials <- select(df_full, any_of(c("outcome",val_rat = "val_slider_8.response", val_rat_rt = "feed_rate.rt",
prob_rat = "worth_slider.response", prob_rat_rt = "worth_rate.rt",
trial_raw = "trials.thisN", block_raw = "blocks.thisN", frac = "fA_img")),
ends_with(".ran"))
trials$frac
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R")
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
#This is the master script for initial data analysis steps
#It identifies data to use, wrangles it into a usable form, creates additional variables based on this data, and creates plots of certain variables for quality-checking.
library(qualtRics)
library(tidyverse)
library(ddpcr)
library(tidyverse)
library(sigmoid)
##SET MANUALLY
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
path_to_s22fu <- "~/projects/s22_follow_up/"
path_to_rva <- "~/projects/RVA/"
ids_to_exclude <- c("6398dc9eee4c333e1712e777") #Ps whose data you don't want to analyze even if it looks good
##############
#clear out results from old analyses
system("mv /Users/dp/projects/RVA_2/analysis_data/*.csv /Users/dp/projects/RVA/analysis_data/old_analysis_data") #move any CSV files in this folder to old_analysis_data folder
system("rm -rf /Users/dp/projects/RVA_2/analysis_data/qc_plots/trial_level_vars/*") #clear the folder containing trial-level plots
system("rm -f /Users/dp/projects/RVA_2/analysis_data/qc_plots/sub_level_variables.pdf") #remove old subject level variable plot
#read in necessary functions
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22fu,"code/functions/s22fu_utilities.R"))
source(paste0(path_to_rva,"code/functions/rva_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_wrangle_psychopy_data.R"))
csvs_to_analyze <- get_csvs_to_analyze(path_to_project_directory,ids_to_exclude,first_time="2024-04-26") #get the usable CSVs to analyze
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
#Returns a list - one element for each subject - where each element is itself a list containing dfs with the trial-level data and subject-level data
trials_list <- lapply(all_data, function(l) l[[1]]) #get a list of the trial-level dfs only
trial_level_data <- do.call(rbind,trials_list) #stack trial dfs into one big df
sub_list <- lapply(all_data, function(l) l[[2]]) #get a list of the subject-level dfs only
sub_level_data <- do.call(rbind,sub_list) #stack them into one big data frame
#append the Yes/No answer from qualtrics to this data
sub_level_data <- qualtrics_append(sub_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
trial_level_data <- qualtrics_append(trial_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
#write both to CSVs
date_time <- Sys.time() %>% chartr(" ","_",.) %>% chartr(":","_",.) #grab the date and time, reformatting ':' and '-' to  '_' so you can label the files with it
write.csv(trial_level_data,paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#write subject-level data
write.csv(sub_level_data,paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","prob_rat_rt","val_rat","prob_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
sl_hists <- c("answers_incorrect","instruct_keypress",
"feed_check_passed","aff_check_passed","worth_check_passed","att_checks_passed",
"probrat_skipped_percent","sd_probrat","mean_probrat_rt",
"valrat_skipped_percent","sd_valrat","mean_valrat_rt",
"earnings","total_experiment_time") #subject-level variables to plot
plot_sub_level_vars(sub_level_data,sl_hists,path_to_project_directory) #create and save plot grids
?str_extract
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
#This is the master script for initial data analysis steps
#It identifies data to use, wrangles it into a usable form, creates additional variables based on this data, and creates plots of certain variables for quality-checking.
library(qualtRics)
library(tidyverse)
library(ddpcr)
library(tidyverse)
library(sigmoid)
##SET MANUALLY
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
path_to_s22fu <- "~/projects/s22_follow_up/"
path_to_rva <- "~/projects/RVA/"
ids_to_exclude <- c("6398dc9eee4c333e1712e777") #Ps whose data you don't want to analyze even if it looks good
##############
#clear out results from old analyses
system("mv /Users/dp/projects/RVA_2/analysis_data/*.csv /Users/dp/projects/RVA/analysis_data/old_analysis_data") #move any CSV files in this folder to old_analysis_data folder
system("rm -rf /Users/dp/projects/RVA_2/analysis_data/qc_plots/trial_level_vars/*") #clear the folder containing trial-level plots
system("rm -f /Users/dp/projects/RVA_2/analysis_data/qc_plots/sub_level_variables.pdf") #remove old subject level variable plot
#read in necessary functions
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22fu,"code/functions/s22fu_utilities.R"))
source(paste0(path_to_rva,"code/functions/rva_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_wrangle_psychopy_data.R"))
csvs_to_analyze <- get_csvs_to_analyze(path_to_project_directory,ids_to_exclude,first_time="2024-04-26") #get the usable CSVs to analyze
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
#Returns a list - one element for each subject - where each element is itself a list containing dfs with the trial-level data and subject-level data
trials_list <- lapply(all_data, function(l) l[[1]]) #get a list of the trial-level dfs only
trial_level_data <- do.call(rbind,trials_list) #stack trial dfs into one big df
sub_list <- lapply(all_data, function(l) l[[2]]) #get a list of the subject-level dfs only
sub_level_data <- do.call(rbind,sub_list) #stack them into one big data frame
#append the Yes/No answer from qualtrics to this data
sub_level_data <- qualtrics_append(sub_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
trial_level_data <- qualtrics_append(trial_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
#write both to CSVs
date_time <- Sys.time() %>% chartr(" ","_",.) %>% chartr(":","_",.) #grab the date and time, reformatting ':' and '-' to  '_' so you can label the files with it
write.csv(trial_level_data,paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#write subject-level data
write.csv(sub_level_data,paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","prob_rat_rt","val_rat","prob_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
sl_hists <- c("answers_incorrect","instruct_keypress",
"feed_check_passed","aff_check_passed","worth_check_passed","att_checks_passed",
"probrat_skipped_percent","sd_probrat","mean_probrat_rt",
"valrat_skipped_percent","sd_valrat","mean_valrat_rt",
"earnings","total_experiment_time") #subject-level variables to plot
plot_sub_level_vars(sub_level_data,sl_hists,path_to_project_directory) #create and save plot grids
#This is the master script for initial data analysis steps
#It identifies data to use, wrangles it into a usable form, creates additional variables based on this data, and creates plots of certain variables for quality-checking.
library(qualtRics)
library(tidyverse)
library(ddpcr)
library(tidyverse)
library(sigmoid)
##SET MANUALLY
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
path_to_s22fu <- "~/projects/s22_follow_up/"
path_to_rva <- "~/projects/RVA/"
ids_to_exclude <- c("6398dc9eee4c333e1712e777") #Ps whose data you don't want to analyze even if it looks good
##############
#clear out results from old analyses
system("mv /Users/dp/projects/RVA_2/analysis_data/*.csv /Users/dp/projects/RVA/analysis_data/old_analysis_data") #move any CSV files in this folder to old_analysis_data folder
system("rm -rf /Users/dp/projects/RVA_2/analysis_data/qc_plots/trial_level_vars/*") #clear the folder containing trial-level plots
system("rm -f /Users/dp/projects/RVA_2/analysis_data/qc_plots/sub_level_variables.pdf") #remove old subject level variable plot
#read in necessary functions
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22fu,"code/functions/s22fu_utilities.R"))
source(paste0(path_to_rva,"code/functions/rva_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_wrangle_psychopy_data.R"))
csvs_to_analyze <- get_csvs_to_analyze(path_to_project_directory,ids_to_exclude,first_time="2024-04-26") #get the usable CSVs to analyze
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
#Returns a list - one element for each subject - where each element is itself a list containing dfs with the trial-level data and subject-level data
trials_list <- lapply(all_data, function(l) l[[1]]) #get a list of the trial-level dfs only
trial_level_data <- do.call(rbind,trials_list) #stack trial dfs into one big df
sub_list <- lapply(all_data, function(l) l[[2]]) #get a list of the subject-level dfs only
sub_level_data <- do.call(rbind,sub_list) #stack them into one big data frame
#append the Yes/No answer from qualtrics to this data
sub_level_data <- qualtrics_append(sub_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
trial_level_data <- qualtrics_append(trial_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
#write both to CSVs
date_time <- Sys.time() %>% chartr(" ","_",.) %>% chartr(":","_",.) #grab the date and time, reformatting ':' and '-' to  '_' so you can label the files with it
write.csv(trial_level_data,paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#write subject-level data
write.csv(sub_level_data,paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","prob_rat_rt","val_rat","prob_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
sl_hists <- c("answers_incorrect","instruct_keypress",
"feed_check_passed","aff_check_passed","worth_check_passed","att_checks_passed",
"probrat_skipped_percent","sd_probrat","mean_probrat_rt",
"valrat_skipped_percent","sd_valrat","mean_valrat_rt",
"earnings","total_experiment_time") #subject-level variables to plot
plot_sub_level_vars(sub_level_data,sl_hists,path_to_project_directory) #create and save plot grids
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
#This is the master script for initial data analysis steps
#It identifies data to use, wrangles it into a usable form, creates additional variables based on this data, and creates plots of certain variables for quality-checking.
library(qualtRics)
library(tidyverse)
library(ddpcr)
library(tidyverse)
library(sigmoid)
##SET MANUALLY
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
path_to_s22fu <- "~/projects/s22_follow_up/"
path_to_rva <- "~/projects/RVA/"
ids_to_exclude <- c("6398dc9eee4c333e1712e777") #Ps whose data you don't want to analyze even if it looks good
##############
#clear out results from old analyses
system("mv /Users/dp/projects/RVA_2/analysis_data/*.csv /Users/dp/projects/RVA/analysis_data/old_analysis_data") #move any CSV files in this folder to old_analysis_data folder
system("rm -rf /Users/dp/projects/RVA_2/analysis_data/qc_plots/trial_level_vars/*") #clear the folder containing trial-level plots
system("rm -f /Users/dp/projects/RVA_2/analysis_data/qc_plots/sub_level_variables.pdf") #remove old subject level variable plot
#read in necessary functions
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22fu,"code/functions/s22fu_utilities.R"))
source(paste0(path_to_rva,"code/functions/rva_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_wrangle_psychopy_data.R"))
csvs_to_analyze <- get_csvs_to_analyze(path_to_project_directory,ids_to_exclude,first_time="2024-04-26") #get the usable CSVs to analyze
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
#Returns a list - one element for each subject - where each element is itself a list containing dfs with the trial-level data and subject-level data
trials_list <- lapply(all_data, function(l) l[[1]]) #get a list of the trial-level dfs only
trial_level_data <- do.call(rbind,trials_list) #stack trial dfs into one big df
sub_list <- lapply(all_data, function(l) l[[2]]) #get a list of the subject-level dfs only
sub_level_data <- do.call(rbind,sub_list) #stack them into one big data frame
#append the Yes/No answer from qualtrics to this data
sub_level_data <- qualtrics_append(sub_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
trial_level_data <- qualtrics_append(trial_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
#write both to CSVs
date_time <- Sys.time() %>% chartr(" ","_",.) %>% chartr(":","_",.) #grab the date and time, reformatting ':' and '-' to  '_' so you can label the files with it
write.csv(trial_level_data,paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#write subject-level data
write.csv(sub_level_data,paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","prob_rat_rt","val_rat","prob_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
sl_hists <- c("answers_incorrect","instruct_keypress",
"feed_check_passed","aff_check_passed","worth_check_passed","att_checks_passed",
"probrat_skipped_percent","sd_probrat","mean_probrat_rt",
"valrat_skipped_percent","sd_valrat","mean_valrat_rt",
"earnings","total_experiment_time") #subject-level variables to plot
plot_sub_level_vars(sub_level_data,sl_hists,path_to_project_directory) #create and save plot grids
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores=12)
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
stan_model_dir<- paste0(path_to_project_directory,"code/stan_models/")
model_out_dir <- paste0(path_to_project_directory,"output/results/stan_model_fits/")
#load custom functions
source(paste0(path_to_s22,"code/functions/fit_stan_model.R"))
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22,"code/functions/stan_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_utilities.R"))
library(tidyverse)
library(cmdstanr)
library(bayesplot)
library(abind)
trials <- read.csv(paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_2024-08-27_17_13_19.022972.csv"))
subs <- read.csv(paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_2024-08-27_17_13_19.022972.csv"))
nrow(trials)
nrow(subs)
trials <- read.csv(paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_2024-08-27_17_13_19.022972.csv"))
subs <- read.csv(paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_2024-08-27_17_13_19.022972.csv"))
sub_hard_fail <- subs %>% filter(att_checks_passed < 3 |
answers_incorrect > 2 |
sd_valrat < .05 |
sd_probrat < .05 |
valrat_skipped_percent > .15 |
probrat_skipped_percent > .15 |
trials_completed < 80)
#count the number of soft QC cutoffs each subject meets
subs$softs <- 0
for(i in 1:nrow(subs)){
subs$softs[i] <- length(which(c(subs$att_checks_passed[i] == 3,subs$answers_incorrect[i] == 2,
subs$sd_valrat[i] < .07, subs$valrat_skipped_percent[i] > .10,
subs$sd_probrat[i] < .07, subs$probrat_skipped_percent[i] > .10)))
}
sub_soft_fail <- filter(subs,softs >= 2) #identify those who meet more than 2 soft cutoffs
subs_to_exclude <- unique(c(sub_hard_fail$id,sub_soft_fail$id)) #get subjects who failed either set of criteria
#clean data
trials <- trials %>% filter(!(id %in% subs_to_exclude))
subs <- subs %>% filter(!(id %in% subs_to_exclude))
length(subs_to_exclude)/(nrow(subs)+length(subs_to_exclude)) #get percent excluded
trials <- add_sub_indices(trials) #add subject indices to the df. These will match the indices used in Stan.
trials <- add_probe_number(trials,newcol="vrat_number",val_col="val_rat") #add valence rating number
trials <- add_probe_number(trials,newcol="prat_number",val_col="prob_rat") #add probability rating number
trials$prev_vrat_cent <- trials$prev_rate - mean(trials$prev_rate,na.rm=T)
view(trials)
sum(subs$sig_emot == "Yes")/nrow(subs)
subs$age <- as.numeric(subs$age)
sum(subs$gender=="Male")
sum(subs$gender=="Female")
sum(subs$gender=="Non-binary")
mean(subs$age)
sd(subs$age)
source("~/projects/spring_2022_study/code/functions/fit_stan_model.R", echo=TRUE)
source("~/projects/spring_2022_study/code/functions/fit_stan_model.R", echo=TRUE)
View(filter_ci)
type.of(trials$frac)
type_of(trials$frac)
typeof(trials$frac)
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R")
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R")
source("~/projects/RVA_2/code/functions/rva2_wrangle_psychopy_data.R", echo=TRUE)
#This is the master script for initial data analysis steps
#It identifies data to use, wrangles it into a usable form, creates additional variables based on this data, and creates plots of certain variables for quality-checking.
library(qualtRics)
library(tidyverse)
library(ddpcr)
library(tidyverse)
library(sigmoid)
##SET MANUALLY
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
path_to_s22fu <- "~/projects/s22_follow_up/"
path_to_rva <- "~/projects/RVA/"
ids_to_exclude <- c("6398dc9eee4c333e1712e777") #Ps whose data you don't want to analyze even if it looks good
##############
#clear out results from old analyses
system("mv /Users/dp/projects/RVA_2/analysis_data/*.csv /Users/dp/projects/RVA/analysis_data/old_analysis_data") #move any CSV files in this folder to old_analysis_data folder
system("rm -rf /Users/dp/projects/RVA_2/analysis_data/qc_plots/trial_level_vars/*") #clear the folder containing trial-level plots
system("rm -f /Users/dp/projects/RVA_2/analysis_data/qc_plots/sub_level_variables.pdf") #remove old subject level variable plot
#read in necessary functions
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22fu,"code/functions/s22fu_utilities.R"))
source(paste0(path_to_rva,"code/functions/rva_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_wrangle_psychopy_data.R"))
csvs_to_analyze <- get_csvs_to_analyze(path_to_project_directory,ids_to_exclude,first_time="2024-04-26") #get the usable CSVs to analyze
all_data <- lapply(csvs_to_analyze, rva2_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
#Returns a list - one element for each subject - where each element is itself a list containing dfs with the trial-level data and subject-level data
trials_list <- lapply(all_data, function(l) l[[1]]) #get a list of the trial-level dfs only
trial_level_data <- do.call(rbind,trials_list) #stack trial dfs into one big df
sub_list <- lapply(all_data, function(l) l[[2]]) #get a list of the subject-level dfs only
sub_level_data <- do.call(rbind,sub_list) #stack them into one big data frame
#append the Yes/No answer from qualtrics to this data
sub_level_data <- qualtrics_append(sub_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
trial_level_data <- qualtrics_append(trial_level_data,survey="/Users/dp/Downloads/RVA_2_survey.csv",id_col_qualt="participant",join_cols_qualt=c("Q46","Q40","Q41","Q37","Q25"),join_cols_df=c("sig_emot","age","gender","race","ethnicity"))
#write both to CSVs
date_time <- Sys.time() %>% chartr(" ","_",.) %>% chartr(":","_",.) #grab the date and time, reformatting ':' and '-' to  '_' so you can label the files with it
write.csv(trial_level_data,paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#write subject-level data
write.csv(sub_level_data,paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","prob_rat_rt","val_rat","prob_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
sl_hists <- c("answers_incorrect","instruct_keypress",
"feed_check_passed","aff_check_passed","worth_check_passed","att_checks_passed",
"probrat_skipped_percent","sd_probrat","mean_probrat_rt",
"valrat_skipped_percent","sd_valrat","mean_valrat_rt",
"earnings","total_experiment_time") #subject-level variables to plot
plot_sub_level_vars(sub_level_data,sl_hists,path_to_project_directory) #create and save plot grids
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores=12)
path_to_project_directory <- "~/projects/RVA_2/"
path_to_s22 <- "~/projects/spring_2022_study/"
stan_model_dir<- paste0(path_to_project_directory,"code/stan_models/")
model_out_dir <- paste0(path_to_project_directory,"output/results/stan_model_fits/")
#load custom functions
source(paste0(path_to_s22,"code/functions/fit_stan_model.R"))
source(paste0(path_to_s22,"code/functions/s22_utilities.R"))
source(paste0(path_to_s22,"code/functions/stan_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/rva2_utilities.R"))
library(tidyverse)
library(cmdstanr)
library(bayesplot)
library(abind)
trials <- read.csv(paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_2024-08-27_17_13_19.022972.csv"))
trials <- read.csv(paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_2024-08-27_18_23_19.092039.csv"))
subs <- read.csv(paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_2024-08-27_18_23_19.092039.csv"))
sub_hard_fail <- subs %>% filter(att_checks_passed < 3 |
answers_incorrect > 2 |
sd_valrat < .05 |
sd_probrat < .05 |
valrat_skipped_percent > .15 |
probrat_skipped_percent > .15 |
trials_completed < 80)
#count the number of soft QC cutoffs each subject meets
subs$softs <- 0
for(i in 1:nrow(subs)){
subs$softs[i] <- length(which(c(subs$att_checks_passed[i] == 3,subs$answers_incorrect[i] == 2,
subs$sd_valrat[i] < .07, subs$valrat_skipped_percent[i] > .10,
subs$sd_probrat[i] < .07, subs$probrat_skipped_percent[i] > .10)))
}
sub_soft_fail <- filter(subs,softs >= 2) #identify those who meet more than 2 soft cutoffs
subs_to_exclude <- unique(c(sub_hard_fail$id,sub_soft_fail$id)) #get subjects who failed either set of criteria
#clean data
trials <- trials %>% filter(!(id %in% subs_to_exclude))
subs <- subs %>% filter(!(id %in% subs_to_exclude))
length(subs_to_exclude)/(nrow(subs)+length(subs_to_exclude)) #get percent excluded
trials <- add_sub_indices(trials) #add subject indices to the df. These will match the indices used in Stan.
trials <- add_probe_number(trials,newcol="vrat_number",val_col="val_rat") #add valence rating number
trials <- add_probe_number(trials,newcol="prat_number",val_col="prob_rat") #add probability rating number
trials$prev_vrat_cent <- trials$prev_rate - mean(trials$prev_rate,na.rm=T)
trials <- trials %>% mutate(frac_ix = case_when(
frac_img == 1 ~ 1,
frac_img == 9 ~ 2,
frac_img == 3 ~ 3,
frac_img == 5 ~ 4,
)) %>%
mutate(alt_frac_ix = case_when(
frac_ix == 1 ~ 2,
frac_ix == 2 ~ 1,
frac_ix == 3 ~ 4,
frac_ix == 4 ~ 3
))
view(trials)
view(select(trials,frac_img,frac_ix,alt_frac_ix))
source("~/projects/RVA_2/code/functions/rva2_utilities.R", echo=TRUE)
source("~/projects/RVA_2/code/functions/rva2_utilities.R")
source("~/projects/RVA_2/code/functions/rva2_utilities.R")
abs(trials$outcome[1])
sub_by_trial_vec_list(trials,"outcome")
frac <- sub_by_trial_matrix(trials,"frac_ix")
frac
sub_by_trial_matrix(trials,"vrat_number")
max(trials$vrat_number)
val_rat_trials <- filter(trials,vrat_number != 0)
val_rat <- val_rat_trials$val_rat
val_rat
prob_rat_num <- sub_by_trial_matrix(trials,"prat_number")
n_prat <- max(trials$prat_number)
n_prat
prob_rat_trials <- filter(trials,prat_number != 0)
prob_rat <- prob_rat_trials$prob_rat
prob_rat
prob_rat_num
prev_vrat_cent <- sub_by_trial_vec_list(trials,"prev_vrat_cent") #previous valence rating
prev_vrat_cent
source("~/projects/RVA_2/code/functions/rva2_utilities.R")
sigmoid(2)
sigmoid(2)
load("/Users/dp/projects/RVA/output/results/stan_model_fits/base/fit_stan_model_outs.rds")
load("/Users/dp/projects/RVA/output/results/stan_model_fits/arl_pav/fit_stan_model_outs.rds")
sigmoid(6)
sigmoid(2)
prereg <- fit_stan_model(stan_file=paste0(stan_model_dir,"prereg_rva2.stan"),
model_out_dir=model_out_dir,
raw_data=trials,
study = "rva2",
n_t = 80)
source("~/projects/RVA_2/code/functions/rva2_utilities.R")
source("~/projects/RVA_2/code/functions/rva2_utilities.R", echo=TRUE)
max(trials$frac_ix)
prereg <- fit_stan_model(stan_file=paste0(stan_model_dir,"prereg_rva2.stan"),
model_out_dir=model_out_dir,
raw_data=trials,
study = "rva2",
n_t = 80)
source("~/projects/RVA_2/code/functions/rva2_utilities.R")
prereg <- fit_stan_model(stan_file=paste0(stan_model_dir,"prereg_rva2.stan"),
model_out_dir=model_out_dir,
raw_data=trials,
study = "rva2",
n_t = 80)
